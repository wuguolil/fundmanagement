@Target({ElementType.FIELD})
@Retention(RetentionPolicy.RUNTIME)
@Constraint(validatedBy = DisallowExtentionsValidator.class)
public @interface DisallowExtentions {
    String message() default "This value is not allowed.";
    Class<?>[] groups() default {};
    Class<? extends Payload>[] payload() default {};
}

public class DisallowExtentionsValidator implements ConstraintValidator<DisallowExtentions, List<String>> {
    private List<String> disallowedExtentions;

    public DisallowExtentionsValidator(List<String> disallowedExtentions) {
        this.disallowedExtentions = disallowedExtentions;
    }

    @Override
    public void initialize(DisallowExtentions constraintAnnotation) {}

    @Override
    public boolean isValid(List<String> extentions, ConstraintValidatorContext context) {
        for (String extention : extentions) {
            if (disallowedExtentions.contains(extention)) {
                return false;
            }
        }
        return true;
    }
}
